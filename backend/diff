diff --git a/backend/app/contex.go b/backend/app/contex.go
index 8658a98..229c1d3 100644
--- a/backend/app/contex.go
+++ b/backend/app/contex.go
@@ -20,7 +20,7 @@ type Context struct {
 	Values         map[any]any
 }
 
-func (c *Context) BodyParser(out interface{}) error {
+func (c *Context) 	BodyParser(out interface{}) error {
 	return json.NewDecoder(c.Request.Body).Decode(&out)
 }
 
diff --git a/backend/pkg/db/sqlite/social-network.db b/backend/pkg/db/sqlite/social-network.db
index 9e84bef..c724bef 100644
Binary files a/backend/pkg/db/sqlite/social-network.db and b/backend/pkg/db/sqlite/social-network.db differ
diff --git a/backend/pkg/handlers/login.go b/backend/pkg/handlers/login.go
index 2cc44c7..734edad 100644
--- a/backend/pkg/handlers/login.go
+++ b/backend/pkg/handlers/login.go
@@ -18,7 +18,7 @@ var loginHandler = func(ctx *octopus.Context) {
 	var newUser = models.User{}
 
 	// Try to deserialize the form data into the User instance.
-	if err := newUser.UnmarshalFormData(ctx); err != nil {
+	if err := ctx.BodyParser(newUser); err != nil {
 		// If deserialization fails, log the error and return an HTTP status  500.
 		log.Println(err)
 		ctx.Status(http.StatusInternalServerError)
diff --git a/backend/pkg/handlers/registration.go b/backend/pkg/handlers/registration.go
index 9411405..0dbf857 100644
--- a/backend/pkg/handlers/registration.go
+++ b/backend/pkg/handlers/registration.go
@@ -19,7 +19,7 @@ var registationHandler = func(ctx *octopus.Context) {
 	var newUser = models.User{}
 
 	// Attempts to deserialize the form data into the User instance.
-	if err := newUser.UnmarshalFormData(ctx); err != nil {
+	if err := ctx.BodyParser(newUser); err != nil {
 		// If deserialization fails, logs the error and returns an HTTP status  500.
 		log.Println(err)
 		ctx.Status(500)
diff --git a/backend/pkg/models/user.go b/backend/pkg/models/user.go
index d172b1f..725f0f3 100644
--- a/backend/pkg/models/user.go
+++ b/backend/pkg/models/user.go
@@ -3,12 +3,10 @@ package models
 import (
 	octopus "backend/app"
 	"database/sql"
-	"encoding/json"
 	"errors"
 	"fmt"
 
 	"html"
-	"io"
 	"time"
 
 	"github.com/google/uuid"
@@ -156,8 +154,8 @@ func (user *User) Delete(db *sql.DB) error {
 
 	stmt, err := db.Prepare(query)
 	if err != nil {
-		return fmt.Errorf("unable to prepare the query. %v", err)
 	}
+	return fmt.Errorf("unable to prepare the query. %v", err)
 	defer stmt.Close()
 
 	_, err = stmt.Exec(time.Now(), user.ID)
@@ -167,16 +165,6 @@ func (user *User) Delete(db *sql.DB) error {
 	return nil
 }
 
-func (user *User) UnmarshalFormData(ctx *octopus.Context) error {
-	jsonForm, err := io.ReadAll(ctx.Request.Body)
-	if err != nil {
-		return err
-	}
-	if err := json.Unmarshal(jsonForm, user); err != nil {
-		return err
-	}
-	return nil
-}
 func (user *User) CheckCredentials(ctx *octopus.Context) bool {
 	query := `SELECT id,password FROM users WHERE (email = ? OR nickname = ?)`
 	var realPassword string
